###############################################################################
# This file was automatically generated by extract_sage_libgap.py. DO NOT EDIT!
###############################################################################
#
#     Copyright (C) 2024 LaiTeP and contributors
#
#     This file is part of the sage_libgap distribution.
#     It is an automatically modified version of a file in the "Sage: a free
#     open-source mathematics software system" software package. Further
#     licensing information may be available further down this file.
#
#     The sage_libgap package is free software; you can redistribute it and/or
#     modify it under the terms of the GNU General Public License as published
#     by the Free Software Foundation, either version 3 of the License, or (at
#     your option) any later version.
#
#     The sage_libgap package is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
#     Public License for more details.
#
#     You should have received a copy of the GNU General Public License along
#     with sage_libgap package. If not, see <https://www.gnu.org/licenses/>.
#
###############################################################################

r"""
Fast binary operations for basic types
"""

from sage_libgap.libs.gmp.types cimport mpz_t, mpq_t
from sage_libgap.libs.gmp.mpz cimport mpz_set, mpz_add, mpz_mul
from sage_libgap.libs.gmp.mpq cimport mpq_canonicalize, mpq_numref, mpq_denref, mpq_add

cdef inline void mpq_add_z(mpq_t res, mpq_t op1, mpz_t op2) noexcept:
    mpz_mul(mpq_numref(res), mpq_denref(op1), op2)
    mpz_add(mpq_numref(res), mpq_numref(res), mpq_numref(op1))
    mpz_set(mpq_denref(res), mpq_denref(op1))

cdef inline void mpq_div_zz(mpq_t res, mpz_t op1, mpz_t op2) noexcept:
    mpz_set(mpq_numref(res), op1)
    mpz_set(mpq_denref(res), op2)
    mpq_canonicalize(res)

cdef inline void mpq_mul_z(mpq_t res, mpq_t op1, mpz_t op2) noexcept:
    # (A/B) * C = (C/B) * A
    mpq_div_zz(res, op2, mpq_denref(op1))
    mpz_mul(mpq_numref(res), mpq_numref(res), mpq_numref(op1))
